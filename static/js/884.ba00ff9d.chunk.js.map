{"version":3,"file":"static/js/884.ba00ff9d.chunk.js","mappings":"iOA0EA,UArEqB,WAAO,IAAD,MACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6GAEGC,EAAAA,EAAAA,IAAA,6CACiBX,GACtC,CACEY,QAAS,CACPC,cACE,gOAPY,OAEdC,EAFc,OAWpBN,EAASM,EAASC,MAXE,gDAapBC,QAAQC,IAAI,KAAMC,SAbE,yDAAH,qDAiBrBR,GACD,GAAE,CAACV,IAEJ,IAAQmB,EACNZ,EADMY,MAAOC,EACbb,EADaa,YAAaC,EAC1Bd,EAD0Bc,aAAcC,EACxCf,EADwCe,aAAcC,EACtDhB,EADsDgB,SAAUC,EAChEjB,EADgEiB,OAElE,OACE,6BACE,SAAC,KAAD,CAAMC,GAAIvB,EAAV,SAAwB,aACxB,gCACE,gBACEwB,IAAG,yCAAoCN,GACvCO,IAAKR,KAEP,4BACE,0BACGA,EAAM,KADT,OACYE,QADZ,IACYA,OADZ,EACYA,EAAcO,MAAM,EAAG,GAAG,QAEtC,yBAAG,eAAH,UAAiC,IAAfN,EAAsB,UAAxC,aAAgB,EAA6BO,QAAQ,GAAG,QACxD,uBAAG,cACH,uBAAIN,KACJ,uBAAG,YACH,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAG9C,gCACE,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAMR,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,qBAIzB,8BACE,SAAC,EAAAS,SAAD,CAAUC,UAAU,uBAAG,uBAAvB,UACE,SAAC,KAAD,UAKT,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const responce = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}`,\n          {\n            headers: {\n              Authorization:\n                'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMDlhZWMzZTAxMTQzYTcwM2I0ODM4MjVhODMzMzY2ZiIsInN1YiI6IjY0N2YxMTg3MGUyOWEyMmJlMDhlOTk4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.FrnBh2tYMap5WoIYIMa-C8qNNuc5WsMKgDAIEwEVz6g',\n            },\n          }\n        );\n        setMovie(responce.data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movie;\n  return (\n    <main>\n      <Link to={backLinkHref}>Go back</Link>\n      <section>\n        <img\n          src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n          alt={title}\n        />\n        <div>\n          <h2>\n            {title} ({release_date?.slice(0, 4)})\n          </h2>\n          <p>User Score: {((vote_average * 100) / 10)?.toFixed(2)}%</p>\n          <p>Overview</p>\n          <p>{overview}</p>\n          <p>Genres</p>\n          <p>{genres?.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </section>\n      <section>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </section>\n      <section>\n        <Suspense fallback={<p>Loading subpage...</p>}>\n          <Outlet />\n        </Suspense>\n      </section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","backLinkHref","useLocation","state","from","useState","movie","setMovie","useEffect","getMovieDetails","axios","headers","Authorization","responce","data","console","log","message","title","poster_path","release_date","vote_average","overview","genres","to","src","alt","slice","toFixed","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}