{"version":3,"file":"static/js/134.962cedc8.chunk.js","mappings":"iOAoEA,UAhEe,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAQC,EAAAA,EAAAA,UAAQ,kBAAMH,EAAaI,IAAI,QAAvB,GAAiC,CAACJ,IAClDK,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAIL,EAAO,CACT,IAAMM,EAAS,mCAAG,oGACOC,EAAAA,EAAAA,IAAA,0DAC8BP,GACnD,CACEQ,QAAS,CACPC,cACE,gOANQ,OACVC,EADU,OAUhBd,EAAUc,EAASC,KAAKC,SAVR,2CAAH,qDAYfN,GACD,CACF,GAAE,CAACN,IAYJ,OACE,6BACE,8BACE,kBAAMa,SAbS,SAAAC,GACnBA,EAAEC,iBACF,IAAMf,EAAQc,EAAEE,OAAOC,SAASjB,MAAMP,MAAMyB,OAE5CnB,EAD4B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,EAQK,WACE,kBACEmB,KAAK,OACLC,KAAK,QACL3B,MAAOA,EACP4B,SAXW,SAAAP,GACnBpB,EAASoB,EAAEE,OAAOvB,MACnB,KAWO,mBAAQ0B,KAAK,SAAb,SAAsB,gBAGP,IAAlBxB,EAAO2B,SACN,8BACE,wBACG3B,EAAO4B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMzB,GAAlC,SACGsB,KAFID,EADC,UAYvB,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = useMemo(() => searchParams.get('query'), [searchParams]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query) {\n      const getSearch = async () => {\n        const responce = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?query=${query}`,\n          {\n            headers: {\n              Authorization:\n                'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMDlhZWMzZTAxMTQzYTcwM2I0ODM4MjVhODMzMzY2ZiIsInN1YiI6IjY0N2YxMTg3MGUyOWEyMmJlMDhlOTk4YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.FrnBh2tYMap5WoIYIMa-C8qNNuc5WsMKgDAIEwEVz6g',\n            },\n          }\n        );\n        setMovies(responce.data.results);\n      };\n      getSearch();\n    }\n  }, [query]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value.trim();\n    const newParams = query !== '' ? { query } : {};\n    setSearchParams(newParams);\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n  return (\n    <main>\n      <section>\n        <form onSubmit={onFormSubmit}>\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={value}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n      </section>\n      {movies.length !== 0 && (\n        <section>\n          <ul>\n            {movies.map(({ id, title }) => (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["useState","value","setValue","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","useMemo","get","location","useLocation","useEffect","getSearch","axios","headers","Authorization","responce","data","results","onSubmit","e","preventDefault","target","elements","trim","type","name","onChange","length","map","id","title","to","state","from"],"sourceRoot":""}